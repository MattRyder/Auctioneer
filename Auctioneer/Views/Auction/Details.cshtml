@model Auctioneer.Models.PlaceBidViewModel

@{ 
    ViewBag.Title = Model.Auction.Title;
}
<div class="auction-container">
  <div class="row auction-header">
    <div class="col-xs-12 col-sm-4 col-md-3">
      <img class="img-responsive" src="https://placeholdit.imgix.net/~text?txtsize=33&txt=First%20Image&w=300&h=300" />
    </div>

    <div class="col-xs-12 col-sm-8 col-md-9">
      <div class="row">
        <div class="col-xs-12">
          <h2 class="title">@Model.Auction.Title</h2>
          <h4 class="subtitle">@Model.Auction.Subtitle</h4>
          <span id="endTime" data-time="@(Model.Auction.EndDate.ToString("s", System.Globalization.CultureInfo.InvariantCulture))"></span>
        </div>
      </div>

      <div class="row">
        <div class="col-xs-12" id="bid-container">
          @Html.Partial("BidPlacePartial", Model)
        </div>
      </div>

    </div>
  </div>

  <div class="row">
    <div class="col-sm-10 col-sm-offset-1">
      <h3 class="description">Description</h3>
      @Html.Raw(Model.Auction.Description)
    </div>
  </div>

  @if (User.Identity.IsAuthenticated && User.Identity.GetUserId() == Model.Auction.AuctioneerUser_Id)
  {
      <div class="row">
        <div class="col-sm-10 col-sm-offset-1 text-right">
          @Html.ActionLink("Edit", "Edit", new { id = Model.Auction.ID }, new { @class = "btn btn-default" })
          @using (Html.BeginForm("Delete", "Auction", new { id = Model.Auction.ID }, FormMethod.Post, new { @class = "auc-inline" }))
          {
              @Html.AntiForgeryToken()
              <input class="btn btn-danger" type="submit" value="Delete" name="Delete" />
          }
        </div>
      </div>
  }

</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
<script src="/signalr/hubs"></script>

<script type="text/javascript">
  $(document).ready(function() {
    Auction.initialize("@Model.Auction.ID");
    if(@Json.Encode(Model.Auction.IsActive()))
    {
      Auction.updateTime();
      setInterval(Auction.updateTime, 1000);
    }
  });
</script>