@model Auctioneer.Core.Entities.Auction

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.AuctioneerUser_Id)

    <div class="form-horizontal">
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
          @Html.DescriptionFor(model => model.Title)
          @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Subtitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Subtitle, new { htmlAttributes = new { @class = "form-control" } })
          @Html.DescriptionFor(model => model.Subtitle)
          @Html.ValidationMessageFor(model => model.Subtitle, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control ", id = "auction-description-editor", rows = 20 } })
          @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
      </div>

      @Html.HiddenFor(model => model.MinimumPrice)
      @Html.HiddenFor(model => model.EndDate)

      @if (Model.ID == 0)
      {
          <div class="form-group">
            @Html.LabelFor(model => model.MinimumPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.MinimumPrice, new { htmlAttributes = new { @class = "form-control" } })
              @Html.DescriptionFor(model => model.MinimumPrice)
              @Html.ValidationMessageFor(model => model.MinimumPrice, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.Label("Duration", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.DropDownList("Duration", (SelectList)ViewBag.DurationSelectList, htmlAttributes: new { @class = "form-control" })
            </div>
          </div>
      }
      else
      {
          <div class="form-group">
            @Html.LabelFor(model => model.MinimumPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.TextBox("Minimum Price", Model.MinimumPrice, htmlAttributes: new { @readonly = true, @class = "form-control" })
              <span class="text-hint">The reserve price cannot be changed once the auction is live</span>
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.TextBox("End Date", Model.EndDate, htmlAttributes: new { @readonly = true, @class = "form-control" })
              <span class="text-hint">The end date cannot be changed once the auction is live</span>
            </div>
          </div>
      }


      <div class="form-group">
        <div class="col-xs-12">
          <input type="submit" value="@(Model.ID > 0 ? "Update" : "Create")" class="btn btn-auctioneer pull-right" />
        </div>
      </div>
    </div>
}

<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/ckeditor/config.js"></script>
<script>
  $(document).ready(function () {
    CKEDITOR.replace("auction-description-editor");
  });
</script>